<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LookPHP</title>
  <icon>https://www.gravatar.com/avatar/4e728b1b244070a1005da09d25d0faf3</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lookphp.github.io/"/>
  <updated>2018-03-22T15:40:45.776Z</updated>
  <id>https://lookphp.github.io/</id>
  
  <author>
    <name>lookphp</name>
    <email>lookphp@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ElasticSearch快速入门</title>
    <link href="https://lookphp.github.io/2018/03/22/ElasticSearch%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>https://lookphp.github.io/2018/03/22/ElasticSearch快速入门/</id>
    <published>2018-03-22T15:33:11.000Z</published>
    <updated>2018-03-22T15:40:45.776Z</updated>
    
    <content type="html"><![CDATA[<p>在安装 Elasticsearch 之前，请确保你的计算机已经安装了 Java。目前 Elasticsearch 的最新版是 5.2，需要安装 Java 8，如果你用的是老版本的 Elasticsearch，如 2.x 版，可用 Java 7，但还是推荐使用 Java 8。</p><h1 id="安装前检查"><a href="#安装前检查" class="headerlink" title="安装前检查"></a>安装前检查</h1><h2 id="可以使用如下的命令检查-Java-的版本"><a href="#可以使用如下的命令检查-Java-的版本" class="headerlink" title="可以使用如下的命令检查 Java 的版本"></a>可以使用如下的命令检查 Java 的版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ java -version</span><br></pre></td></tr></table></figure><p>接着，我们可以从<a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.elastic.co%2Fdownloads%2Felasticsearch" target="_blank" rel="noopener">这里</a>下载最新版本的 Elasticsearch，也可使用 wget 下载，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.1.tar.gz</span><br></pre></td></tr></table></figure></p><h2 id="下载完后进行解压"><a href="#下载完后进行解压" class="headerlink" title="下载完后进行解压"></a>下载完后进行解压</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf elasticsearch-5.5.1.tar.gz</span><br></pre></td></tr></table></figure><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p><strong><em>注意：启动elasticsearch的用户不能是root。</em></strong></p><p>首先，我们进入到刚刚解压出来的目录中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd elasticsearch-5.5.1</span><br></pre></td></tr></table></figure></p><p>接着，使用如下命令启动 Elasticsearch：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/elasticsearch</span><br></pre></td></tr></table></figure></p><p>此时，如果正常的话，你可以在终端看到类似如下的输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[2017-03-04T23:25:09,961][INFO ][o.e.n.Node               ] [] initializing ...</span><br><span class="line">[2017-03-04T23:25:10,073][INFO ][o.e.e.NodeEnvironment    ] [yO11WLM] using [1] data paths, mounts [[/ (/dev/disk0s2)]], net usable_space [141.1gb], net total_space [232.9gb], spins? [unknown], types [hfs]</span><br><span class="line">[2017-03-04T23:25:10,074][INFO ][o.e.e.NodeEnvironment    ] [yO11WLM] heap size [1.9gb], compressed ordinary object pointers [true]</span><br><span class="line">[2017-03-04T23:25:10,095][INFO ][o.e.n.Node               ] node name [yO11WLM] derived from node ID [yO11WLMOQDuAOpZbYZYjzw]; set [node.name] to override</span><br><span class="line">[2017-03-04T23:25:10,100][INFO ][o.e.n.Node               ] version[5.5.1], pid[7607], build[db0d481/2017-02-09T22:05:32.386Z], OS[Mac OS X/10.11.5/x86_64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]</span><br><span class="line">[2017-03-04T23:25:11,363][INFO ][o.e.p.PluginsService     ] [yO11WLM] loaded module [aggs-matrix-stats]</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>上面的命令是在前台运行的，如果想在后台以守护进程模式运行，可以加 -d 参数。</p><p>Elasticsearch 启动后，也启动了两个端口 9200 和 9300：</p><ul><li>9200 端口：HTTP RESTful 接口的通讯端口</li><li>9300 端口：TCP 通讯端口，用于集群间节点通信和与 Java 客户端通信的端口</li></ul><h2 id="默认运行端口"><a href="#默认运行端口" class="headerlink" title="默认运行端口"></a>默认运行端口</h2><p>安装成功后，Elastic 就会在默认的9200端口运行。</p><h2 id="请求地址"><a href="#请求地址" class="headerlink" title="请求地址"></a>请求地址</h2><p>现在，让我们做一些测试。在浏览器访问链接<a href="http://localhost:9200/，或使用" target="_blank" rel="noopener">http://localhost:9200/，或使用</a> curl 命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl &apos;http://localhost:9200/?pretty&apos;</span><br></pre></td></tr></table></figure></p><p>我们可以看到类似如下的输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;: &quot;MxO5-r8&quot;,</span><br><span class="line">    &quot;cluster_name&quot;: &quot;elasticsearch&quot;,</span><br><span class="line">    &quot;cluster_uuid&quot;: &quot;uQakSfM7Qi-cphDkxwRdxg&quot;,</span><br><span class="line">    &quot;version&quot;: &#123;</span><br><span class="line">        &quot;number&quot;: &quot;5.5.1&quot;,</span><br><span class="line">        &quot;build_hash&quot;: &quot;19c13d0&quot;,</span><br><span class="line">        &quot;build_date&quot;: &quot;2017-07-18T20:44:24.823Z&quot;,</span><br><span class="line">        &quot;build_snapshot&quot;: false,</span><br><span class="line">        &quot;lucene_version&quot;: &quot;6.6.0&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;tagline&quot;: &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h1><p>在进一步使用 Elasticsearch 之前，让我们先了解几个关键概念。</p><h2 id="在逻辑层面"><a href="#在逻辑层面" class="headerlink" title="在逻辑层面"></a>在逻辑层面</h2><ul><li>Index (索引)：这里的 Index 是名词，一个 Index 就像是传统关系数据库的 - Database，它是 Elasticsearch 用来存储数据的逻辑区域。我们唯一需要做的仅仅是选择一个索引名。这个名字必须是全部小写，不能以下划线开头，不能包含逗号。</li><li>Type (类型)：文档归属于一种 Type，就像是关系数据库中的一个 Table</li><li>Document (文档)：Elasticsearch 使用 JSON 文档来表示一个对象，就像是关系数据库中一个 Table 中的一行数据</li><li>Field (字段)：每个文档包含多个字段，类似关系数据库中一个 Table 的列</li></ul><h2 id="在物理层面"><a href="#在物理层面" class="headerlink" title="在物理层面"></a>在物理层面</h2><ul><li>Node (节点)：node 是一个运行着的 Elasticsearch 实例，一个 node 就是一个单独的 server</li><li>Cluster (集群)：cluster 是多个 node 的集合</li><li>Shard (分片)：数据分片，一个 index 可能会存在于多个 shard</li></ul><h2 id="Relational-DB-和-Elasticsearch的区别"><a href="#Relational-DB-和-Elasticsearch的区别" class="headerlink" title="Relational DB 和 Elasticsearch的区别"></a>Relational DB 和 Elasticsearch的区别</h2><p>在ElasticSearch中，我们常常会听到Index、Type以及Document等概念，那么它们与传统的熟知的关系型数据库中名称的类比如下：</p><table><thead><tr><th style="text-align:left">Mysql</th><th>Elasticsearch</th></tr></thead><tbody><tr><td style="text-align:left">Database（数据库）</td><td>Index（索引）</td></tr><tr><td style="text-align:left">Table（表）</td><td>Type（类型）</td></tr><tr><td style="text-align:left">Row（行）</td><td>Document（文档）</td></tr><tr><td style="text-align:left">Column（列）</td><td>Field（字段）</td></tr><tr><td style="text-align:left">Schema（表设计）</td><td>Mapping（映射）</td></tr><tr><td style="text-align:left">Index（索引）</td><td>Everything Indexed by default（所有字段都被索引）</td></tr><tr><td style="text-align:left">SQL（结构化查询语言）</td><td>Query DSL（查询专用语言）</td></tr></tbody></table><h2 id="其文件目录结构如下"><a href="#其文件目录结构如下" class="headerlink" title="其文件目录结构如下"></a>其文件目录结构如下</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch---这是Elasticsearch解压的目录</span><br><span class="line">　　bin---这里面是ES启动的脚本</span><br><span class="line"></span><br><span class="line">　　conf---elasticsearch.yml为ES的配置文件</span><br><span class="line"></span><br><span class="line">　　data---这里是ES得当前节点的分片的数据，可以直接拷贝到其他的节点进行使用</span><br><span class="line"></span><br><span class="line">　　logs---日志文件</span><br><span class="line"></span><br><span class="line">　　plugins---这里存放一些常用的插件，如果有一切额外的插件，可以放在这里使用。</span><br></pre></td></tr></table></figure><h2 id="HTTP请求链接说明"><a href="#HTTP请求链接说明" class="headerlink" title="HTTP请求链接说明"></a>HTTP请求链接说明</h2><p>一个 Elasticsearch 请求和任何 HTTP 请求一样由若干相同的部件组成：</p><blockquote><p>curl -X<verb> ‘<protocol>://<host>:<port>/<path></path>?&lt;QUERY_STRING&gt;’ -d ‘<body>‘</body></port></host></protocol></verb></p></blockquote><h2 id="被-lt-gt-标记的部件"><a href="#被-lt-gt-标记的部件" class="headerlink" title="被 &lt; &gt; 标记的部件"></a>被 <code>&lt; &gt;</code> 标记的部件</h2><table><thead><tr><th style="text-align:left">参数</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left">VERB</td><td>适当的 HTTP _方法_ 或 _谓词_ : <code>GET</code>、 <code>POST</code>、 <code>PUT</code>、 <code>HEAD</code> 或者 <code>DELETE</code>。</td></tr><tr><td style="text-align:left">PROTOCOL</td><td><code>http</code> 或者 <code>https</code>（如果你在 Elasticsearch 前面有一个 <code>https</code> 代理）</td></tr><tr><td style="text-align:left">HOST</td><td>Elasticsearch 集群中任意节点的主机名，或者用 +localhost+ 代表本地机器上的节点。</td></tr><tr><td style="text-align:left">PORT</td><td>运行 Elasticsearch HTTP 服务的端口号，默认是 <code>9200</code> 。</td></tr><tr><td style="text-align:left">PATH</td><td>API 的终端路径（例如 <code>_count</code> 将返回集群中文档数量）。Path 可能包含多个组件，例如：<code>_cluster/stats</code> 和 <code>_nodes/stats/jvm</code> 。</td></tr><tr><td style="text-align:left">QUERY_STRING</td><td>任意可选的查询字符串参数 (例如 <code>?pretty</code> 将格式化地输出 JSON 返回值，使其更容易阅读)</td></tr><tr><td style="text-align:left">BODY</td><td>一个 JSON 格式的请求体 (如果请求需要的话)</td></tr></tbody></table><h2 id="解决不能以root身份运行"><a href="#解决不能以root身份运行" class="headerlink" title="解决不能以root身份运行"></a>解决不能以root身份运行</h2><p>在ElasticSearch 2.x版本中，默认是不允许以Root用户身份运行实例，可以使用bin/elasticsearch -Des.insecure.allow.root=true来以Root身份启动集群，此外还可以使用bin/elasticsearch -f -Des.path.conf=/path/to/config/dir参数来读取相关的.yml或者.json配置。</p><p><strong>Restful API</strong></p><p>参考文档：<br><a href="https://juejin.im/entry/57e222528ac24700617b8c78" target="_blank" rel="noopener">https://juejin.im/entry/57e222528ac24700617b8c78</a><br><a href="https://imququ.com/post/elasticsearch.html" target="_blank" rel="noopener">https://imququ.com/post/elasticsearch.html</a><br><a href="http://blog.csdn.net/lvhong84/article/details/23936697" target="_blank" rel="noopener">http://blog.csdn.net/lvhong84/article/details/23936697</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在安装 Elasticsearch 之前，请确保你的计算机已经安装了 Java。目前 Elasticsearch 的最新版是 5.2，需要安装 Java 8，如果你用的是老版本的 Elasticsearch，如 2.x 版，可用 Java 7，但还是推荐使用 Java 8。
      
    
    </summary>
    
    
      <category term="ElasticSearch" scheme="https://lookphp.github.io/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo搭建博客教程</title>
    <link href="https://lookphp.github.io/2018/03/22/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <id>https://lookphp.github.io/2018/03/22/使用hexo搭建博客教程/</id>
    <published>2018-03-22T15:17:05.000Z</published>
    <updated>2018-03-22T15:31:14.886Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo的安装需要通过npm命令来进行，安装完node.js之后就默认安装了npm包管理工具，而npm的官方仓库位于境外，由于众所周知的原因，我们大陆用户基本是访问不了官方源了，所以推荐大家使用淘宝镜像进行替换。</p><h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hexo的安装需要通过npm命令来进行，安装完node.js之后就默认安装了npm包管理工具，而npm的官方仓库位于境外，由于众所周知的原因，我们大陆用户基本是访问不了官方源了，所以推荐大家使用淘宝镜像进行替换。&lt;/p&gt;
&lt;h1 id=&quot;Quick-Start&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://lookphp.github.io/tags/hexo/"/>
    
      <category term="blog" scheme="https://lookphp.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lookphp.github.io/2018/03/20/hello-world/"/>
    <id>https://lookphp.github.io/2018/03/20/hello-world/</id>
    <published>2018-03-20T15:29:38.066Z</published>
    <updated>2018-03-20T15:29:38.066Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
